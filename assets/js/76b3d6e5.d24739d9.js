"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6941],{3667:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>o,default:()=>l,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var i=n(4848),s=n(8453);const r={sidebar_position:3},o="Routines",a={id:"chainlink/concepts/routines",title:"Routines",description:"Routines are groupings of Chain in an ordered structure. They allow you to achieve more complexity through being able to reuse a Chain script in other Chain scripts, but not being rooted in Chain themselves. Instead, they are rooted in the Roblox DOM with instances.",source:"@site/docs/chainlink/concepts/routines.md",sourceDirName:"chainlink/concepts",slug:"/chainlink/concepts/routines",permalink:"/ChainLink/docs/chainlink/concepts/routines",draft:!1,unlisted:!1,editUrl:"https://github.com/Hex-Interactive/ChainLink/edit/main/docs/docs/chainlink/concepts/routines.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"chainlink",previous:{title:"Actions",permalink:"/ChainLink/docs/chainlink/concepts/actions"},next:{title:"Triggers",permalink:"/ChainLink/docs/chainlink/concepts/triggers"}},h={},c=[];function d(e){const t={a:"a",code:"code",h1:"h1",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"routines",children:"Routines"}),"\n",(0,i.jsxs)(t.p,{children:["Routines are groupings of ",(0,i.jsx)(t.a,{href:"chain",children:"Chain"})," in an ordered structure. They allow you to achieve more complexity through being able to reuse a Chain script in other Chain scripts, but not being rooted in Chain themselves. Instead, they are rooted in the ",(0,i.jsx)(t.a,{href:"https://create.roblox.com/docs/reference/engine/classes/DataModel",children:"Roblox DOM"})," with instances."]}),"\n",(0,i.jsxs)(t.p,{children:["Routines themselves are Models tagged with the ",(0,i.jsx)(t.code,{children:"Routine"})," tag. They have nested children of Configuration instances with attributes on them that represent the steps of the routine. Steps are named with a number that represents their order. Each step must have a ",(0,i.jsx)(t.code,{children:"string"}),' attribute "Class" and a "Data" attribute of a type that depends on the chosen class.']}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Step Name"}),(0,i.jsx)(t.th,{children:"Data"}),(0,i.jsx)(t.th,{children:"Data Type"}),(0,i.jsx)(t.th,{children:"Functionality"})]})}),(0,i.jsx)(t.tbody,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Chain"}),(0,i.jsx)(t.td,{children:"A Chain script"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"string"})}),(0,i.jsx)(t.td,{children:"Runs a Chain script"})]})})]}),"\n",(0,i.jsx)(t.p,{children:"Routines can be ran through Chain by calling the Routine's name. Routines are executed synchronously through all the steps in order."})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);